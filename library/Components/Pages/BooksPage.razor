@page "/books"
@inject LibraryContext Db
@rendermode InteractiveServer
@inject library.Services.DatabaseService DbService

<PageTitle>Przeszukiwanie książek</PageTitle>

@code {
	private string TitleFilter = "";
	private string AuthorNameFilter = "";
	private string AuthorSurnameFilter = "";

	public Book selectedBook = new Book();
	public Book newBook = new Book();

	private Category RootCategory = new Category();
	private int Id = 5;

	protected override void OnInitialized()
	{
		RootCategory.Id_category = null;
	}
	async private void onAddEntry()
	{
		Console.WriteLine("Add pressed");
		newBook.Id = Id;
		Id++;
		newBook.Title = "TestTitle";
		newBook.Id_category = "005";
		try
		{
			await DbService.SaveDataAsync(newBook);
		}
		catch (Exception ex)
		{
			Console.WriteLine($"Error: {ex.Message}");
		}
		UpdateState();
	}

	public void UpdateState()
	{
		StateHasChanged();
	}

	private void onTitleFilter(ChangeEventArgs e)
	{
		TitleFilter = (e.Value ?? "").ToString() ?? "";
	}

	private void onAuthorNameFilter(ChangeEventArgs e)
	{
		AuthorNameFilter = (e.Value ?? "").ToString() ?? "";
	}

	private void onAuthorSurnameFilter(ChangeEventArgs e)
	{
		AuthorSurnameFilter = (e.Value ?? "").ToString() ?? "";
	}

	public void onCategoryFilter(Category category)
	{
		RootCategory = category;
	}

	@* private void resetCategoryFilter()
	{
		RootCategory = null;
	} *@
	private List<Book> getBooks()
	{
		var books = (from book in Db.Books
					 join bookAuthor in Db.Books_authors on book.Id equals bookAuthor.Id_book into bookAuthorGroup
					 from bookAuthor in bookAuthorGroup.DefaultIfEmpty()
					 join author in Db.Authors on bookAuthor.Id_author equals author.Id into authorGroup
					 from author in authorGroup.DefaultIfEmpty()
					 where (book.Title ?? "").Contains(TitleFilter)
					 && (author.Name ?? "").Contains(AuthorNameFilter ?? "")
					 && (author.Surname ?? "").Contains(AuthorSurnameFilter ?? "")
					 && (book.Id_category ?? "").Contains(RootCategory.Id_category ?? "")
					 select book).Distinct().ToList();

		return books;
	}

}

@* MAIN PAGE *@
<div class="container">
	<div class="row">
		<div class="col-md-2">
			Wyszukiwanie
			<input style="margin:10px" @oninput=@onTitleFilter type="text" class="form-control" id="TitleInput"
				placeholder="Tytuł">
			<input style="margin:10px" @oninput=@onAuthorNameFilter type="text" class="form-control" id="AutorInputName"
				placeholder="Imię Autora">
			<input style="margin:10px" @oninput=@onAuthorSurnameFilter type="text" class="form-control"
				id="AutorInputSurname" placeholder="Nazwisko Autora">
			<input style="margin:10px" type="text" class="form-control" id="PublisherInput" placeholder="Wydawnictwo">

			<div class="dropdown" style="margin:10px;">
				<button class="form-control" type="button" id="dropdownMenuCategory" data-bs-toggle="dropdown"
					aria-expanded="false" data-bs-auto-close="outside" @onclick="() => RootCategory = new()">
					Kategoria
				</button>
				<ul class="dropdown-menu" aria-labelledby="dropdownMenuCategory">
					@foreach (var supercategory in Db.Categories.Where(Category => Category.Id_supercategory == null))
					{
						<CascadingValue Value="this">
							<CategoryComponent Category="@supercategory" />
						</CascadingValue>
					}
				</ul>
			</div>


			Zarządzanie
			<button style="margin:10px" type="button" class="btn btn-primary" data-bs-toggle="modal"
				data-bs-target="#AddBookModal">
				Dodaj książkę
			</button>
			<button style="margin:10px" type="button" class="btn btn-primary" data-bs-toggle="modal"
				data-bs-target="#AddCopyModal">
				Dodaj egzemplarz
			</button>
			<button style="margin:10px" type="button" class="btn btn-primary" id="test" @onclick="onAddEntry">
				Test</button>
		</div>
		<div class="col-md-10">
			Dane
			<div class="row-md-6">
				<ul class="list-group overflow-auto shadow" id="BooksList" style="margin:10px; height: 40vh">
					<li class="list-group-item"> ==== Filtered database data below ==== </li>
					<li class="list-group-item"></li>
					@foreach (var book in getBooks())
					{
						<CascadingValue Value="this">
							<BookComponent Book="@book" />
						</CascadingValue>
					}

				</ul>
			</div>
			<div class="row-md-6">
				<ul class="list-group overflow-auto shadow" id="CopiesList" style="margin:10px; height: 40vh">
					<li class="list-group-item">
						<h3 style="font-weight: bold;">@selectedBook.Title</h3>
					</li>
					@foreach (var copy in Db.Copies.Where(copy => copy.Id_book == selectedBook.Id).ToList())
					@* TODO: make it pretty and filtering by publisher *@
					{
						<CascadingValue Value="this">
							<CopyComponent Copy="@copy" />
						</CascadingValue>
					}
				</ul>
			</div>
		</div>
	</div>
</div>

@* ADD COPY MODAL *@
<div class="modal fade" id="AddCopyModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h1 class="modal-title fs-5" id="exampleModalLabel">Dodaj Egzemplarz</h1>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				@* TODO: ADDING COPY MODAL *@
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
				<button type="button" class="btn btn-primary">Save changes</button>
			</div>
		</div>
	</div>
</div>


@* ADD BOOK MODAL *@
<div class="modal fade" id="AddBookModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h1 class="modal-title fs-5" id="exampleModalLabel">Dodaj Egzemplarz</h1>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				@* TODO: ADDING BOOK MODAL *@
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
				<button type="button" class="btn btn-primary">Save changes</button>
			</div>
		</div>
	</div>
</div>
